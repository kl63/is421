name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
      - development
      - QA

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (if applicable)
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Change as per your project requirements

      - name: Install dependencies
        run: |
          npm install # Use yarn or other package managers if necessary

      - name: Build the project
        run: |
          npm run build # Adjust according to your build process

      - name: Deploy to DigitalOcean
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            DO_SUBDOMAIN=${{ secrets.PRODUCTION_DOMAIN }}
          elif [ "${{ github.ref_name }}" == "QA" ]; then
            DO_SUBDOMAIN=${{ secrets.QA_DOMAIN }}
          elif [ "${{ github.ref_name }}" == "development" ]; then
            DO_SUBDOMAIN=${{ secrets.DEV_DOMAIN }}
          else
            echo "Branch not matched to a deployment domain. Skipping."
            exit 0
          fi

          echo "Deploying to $DO_SUBDOMAIN"

          # Example using rsync or scp for static files
          rsync -avz --delete ./build/ user@$DO_SUBDOMAIN:/var/www/html/
          
          # Example for Docker
          ssh user@$DO_SUBDOMAIN "docker pull yourimage && docker-compose up -d"

      - name: Verify Deployment
        run: |
          echo "Deployment to $DO_SUBDOMAIN complete!"
